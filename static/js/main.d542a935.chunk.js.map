{"version":3,"sources":["components/error-indicator/e-droid2.png","components/header/index.js","components/header/header.js","services/swapi-service.js","components/spinner/index.js","components/spinner/spinner.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/random-planet/random-planet.js","components/random-planet/index.js","components/item-list/index.js","components/item-list/item-list.js","components/person-details/view-info.js","components/person-details/index.js","components/person-details/person-details.js","components/app/index.js","components/app/app.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","href","SwapiService","_apiBase","_transformPlanet","planet","id","_this","_extractId","name","population","rotationPeriod","rotation_period","diameter","_transformStarship","starship","model","manufacturer","costInCredits","cost_in_credits","length","crew","passengers","cargoCapacity","cargo_capacity","_transformPerson","person","gender","birthYear","birth_year","eyeColor","eye_color","url","fetch","concat","this","res","ok","Error","status","json","getResourse","results","map","item","match","Spinner","ErrorIndicator","src","droidImg","alt","RandomPlanet","swapiService","state","loading","error","onPlanetLoaded","setState","onError","err","updatePlanet","Math","floor","random","getPlanet","then","catch","interval","setInterval","clearInterval","_this$state","errorView","components_error_indicator","spinner","components_spinner","content","random_planet_ViewContent","Component","ViewContent","_ref","Fragment","ItemList","peopleList","_this2","getAllPeople","arr","_this3","key","onClick","props","OnItemSelected","console","log","items","renderItems","ViewInfo","PersonDetails","updatePerson","prevProps","personId","getPerson","onUpdate","view_info","App","selectedPerson","onPersonSelected","components_header","components_random_planet","components_item_list","components_person_details","React","ReactDOM","render","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.d542a935.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/e-droid2.995df847.png\";","import Header from './header.js';\r\nexport default Header;","import React from 'react';\r\n\r\nimport './header.css';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header d-flex\">\r\n      <h3>\r\n        <a href=\"#\">\r\n          Star DB\r\n        </a>\r\n      </h3>\r\n      <ul className=\"d-flex\">\r\n        <li>\r\n          <a href=\"#\">People</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"#\">Planets</a>\r\n        </li>\r\n        <li>\r\n          <a href=\"#\">Starships</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","export default class SwapiService {\r\n\r\n    _apiBase = `https://swapi.co/api`;\r\n\r\n    async getResourse(url) {\r\n        const res = await fetch(`${this._apiBase}${url}`);\r\n    \r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}` +\r\n            `recived ${res.status}`)\r\n        }\r\n\r\n        return await res.json();\r\n    }\r\n\r\n    async getAllPeople() {\r\n        const res = await this.getResourse(`/people/`);\r\n        return res.results.map(this._transformPerson);\r\n    }\r\n\r\n    async getPerson(id) {\r\n        const person = await this.getResourse(`/people/${id}/`);\r\n        return this._transformPerson(person);\r\n    }\r\n\r\n    async getAllStarships() {\r\n        const res = await this.getResourse(`/starships/`);\r\n        return res.results.map(this._transformStarship);\r\n    }\r\n\r\n    async getStarship(id) {\r\n        const starship = await this.getResourse(`/starships/${id}/`);\r\n        return this._transformStarship(starship);\r\n    }\r\n\r\n    async getAllPlanets() {\r\n        const res = await this.getResourse(`/planets/`);\r\n        return res.results.map(this._transformPlanet);\r\n    }\r\n\r\n    async getPlanet(id) {\r\n        const planet = await this.getResourse(`/planets/${id}/`);\r\n        return this._transformPlanet(planet);\r\n    }\r\n\r\n    _extractId(item) {\r\n        const idRegExp = /\\/([0-9]*)\\/$/;\r\n        return item.url.match(idRegExp)[1];\r\n      }\r\n\r\n    _transformPlanet = (planet) => {\r\n        return {\r\n            id: this._extractId(planet),\r\n            name: planet.name,\r\n            population: planet.population,\r\n            rotationPeriod: planet.rotation_period,\r\n            diameter: planet.diameter,\r\n        }\r\n    }\r\n\r\n    _transformStarship = (starship) => {\r\n        return {\r\n            id: this._extractId(starship),\r\n            name: starship.name,\r\n            model: starship.model,\r\n            manufacturer: starship.manufacturer,\r\n            costInCredits: starship.cost_in_credits,\r\n            length: starship.length,\r\n            crew: starship.crew,\r\n            passengers: starship.passengers,\r\n            cargoCapacity: starship.cargo_capacity,\r\n        }\r\n    }\r\n\r\n    _transformPerson = (person) => {\r\n        return {\r\n          id: this._extractId(person),\r\n          name: person.name,\r\n          gender: person.gender,\r\n          birthYear: person.birth_year,\r\n          eyeColor: person.eye_color\r\n        }\r\n      }\r\n\r\n}\r\n\r\n\r\n","import Spinner from './spinner.js';\r\nexport default Spinner;","import React from 'react';\r\n\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n            <div className=\"hoba lds-css ng-scope\">\r\n                <div className=\"hoba lds-double-ring\">\r\n                    <div></div>\r\n                    <div></div>\r\n                </div>\r\n            </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default Spinner;","import ErrorIndicator from './error-indicator.js';\r\nexport default ErrorIndicator;","import React from 'react';\r\nimport './error-indicator.css';\r\nimport droidImg from './e-droid2.png';\r\n\r\nconst ErrorIndicator = () => {\r\n    return (\r\n        <div className=\"error-indicator\">\r\n            <img src={droidImg} alt=\"error icon\"/>\r\n            <div>\r\n                <h3>Error</h3>\r\n                <span>Something is broken, the robots are already going to be repaired.</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorIndicator;","import React, { Component } from 'react';\r\n\r\nimport './random-planet.css';\r\nimport SwapiService from '../../services/swapi-service';\r\nimport Spinner from '../spinner';\r\nimport ErrorIndicator from '../error-indicator'; \r\n\r\nexport default class RandomPlanet extends Component {\r\n\r\n  swapiService = new SwapiService;\r\n\r\n  componentDidMount() {\r\n    this.updatePlanet();\r\n    this.interval = setInterval(this.updatePlanet, 6000);\r\n  };\r\n\r\n  componentWillMount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  state = {\r\n    planet: {},\r\n    loading: true,\r\n    error: false,\r\n  };\r\n\r\n  onPlanetLoaded = (planet) => {\r\n    this.setState({\r\n      planet, \r\n      loading: false\r\n    })\r\n  }\r\n\r\n  onError = (err) => {\r\n    this.setState({\r\n      loading: false,\r\n      error: true,\r\n    })\r\n  }\r\n\r\n  updatePlanet = () => {\r\n    const id = Math.floor(Math.random()*20) + 2; \r\n    this.swapiService\r\n      .getPlanet(id)\r\n      .then(this.onPlanetLoaded)\r\n      .catch(this.onError);\r\n  };\r\n\r\n  render() {\r\n    const { planet, loading, error } = this.state;\r\n\r\n    const errorView = error ? <ErrorIndicator /> : null;\r\n    const spinner = loading ? <Spinner /> : null;\r\n    const content = (!loading && !error) ? <ViewContent planet={planet} /> : null;\r\n\r\n    return (\r\n      <div className=\"random-planet jumbotron rounded\">\r\n        { spinner }\r\n        { content }\r\n        { errorView }\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst ViewContent = ({planet}) => {\r\n  const {id, name, population, rotationPeriod, diameter} = planet;\r\n  return(\r\n    <React.Fragment>\r\n        <img className=\"planet-image\"\r\n             src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`} />\r\n        <div>\r\n          <h4>{name}</h4>\r\n          <ul className=\"list-group list-group-flush\">\r\n            <li className=\"list-group-item\">\r\n              <span className=\"term\">Population</span>\r\n              <span>{population}</span>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <span className=\"term\">Rotation Period</span>\r\n              <span>{rotationPeriod}</span>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <span className=\"term\">Diameter</span>\r\n              <span>{diameter}</span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n    </React.Fragment>\r\n  )\r\n}","import RandomPlanet from './random-planet.js';\r\nexport default RandomPlanet;","import ItemList from './item-list.js';\r\nexport default ItemList;","import React, { Component } from 'react';\r\n\r\nimport './item-list.css';\r\nimport SwapiService from '../../services/swapi-service';\r\nimport Spinner from '../spinner';\r\n\r\nexport default class ItemList extends Component {\r\n\r\n  swapiService = new SwapiService();\r\n\r\n  state = {\r\n    peopleList: null,\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.swapiService.getAllPeople()\r\n      .then((peopleList) => {\r\n        this.setState({\r\n          peopleList \r\n        })\r\n      })\r\n  }\r\n\r\n  renderItems(arr) {\r\n    return arr.map(({ id, name }) => {\r\n      return (\r\n        <li className=\"list-group-item\"\r\n          key={ id }\r\n          onClick={ () => this.props.OnItemSelected(id) }>\r\n          { name }\r\n        </li>\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    const {peopleList} = this.state;\r\n\r\n    if (peopleList === null ) {\r\n      return <Spinner />\r\n    }\r\n\r\n    console.log(peopleList);\r\n    \r\n    const items = this.renderItems(peopleList);\r\n\r\n    return (\r\n      <ul className=\"item-list list-group\">\r\n        { items }\r\n      </ul>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nconst ViewInfo = ({person}) => {\r\n\r\n    const {id, name, gender, birthYear, eyeColor} = person;\r\n  \r\n    return(\r\n      <React.Fragment >\r\n        <img className=\"person-image\"\r\n            src={`https://starwars-visualguide.com/assets/img/characters/${id}.jpg`} />\r\n  \r\n          <div className=\"card-body\">\r\n            <h4>{name}</h4>\r\n            <ul className=\"list-group list-group-flush\">\r\n              <li className=\"list-group-item\">\r\n                <span className=\"term\">Gender</span>\r\n                <span>{gender}</span>\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <span className=\"term\">Birth Year</span>\r\n                <span>{birthYear}</span>\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <span className=\"term\">Eye Color</span>\r\n                <span>{eyeColor}</span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  export default ViewInfo;","import PersonDetails from './person-details.js';\r\nexport default PersonDetails;","import React, { Component } from 'react';\r\n\r\nimport './person-details.css';\r\nimport SwapiService from '../../services/swapi-service';\r\nimport Spinner from '../spinner/';\r\nimport ViewInfo from './view-info';\r\n\r\nexport default class PersonDetails extends Component {\r\n\r\n  swapiService = new SwapiService();\r\n\r\n  state = {\r\n    person: {},\r\n    loading: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updatePerson();\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n     if (this.props.personId !== prevProps.personId) {\r\n      this.updatePerson();\r\n    };\r\n  };\r\n\r\n\r\n  onUpdate(personId) {\r\n    this.swapiService.getPerson(personId).then((person) => {\r\n      this.setState({\r\n        person,\r\n      });\r\n    });\r\n  }\r\n\r\n  updatePerson() {\r\n    const { personId } = this.props;\r\n    if (!personId) {\r\n      return\r\n    };\r\n    this.onUpdate(personId);\r\n    this.setState({\r\n      loading: false\r\n    })\r\n  };\r\n\r\n  render() {\r\n\r\n    const { person, loading } = this.state;\r\n\r\n    // const Spinner = loading ? <Spinner /> : null;\r\n    // const ViewInfo = !loading ? <ViewInfo person={ person } /> : null;\r\n\r\n    return (\r\n      <div className=\"person-details card\">\r\n        <ViewInfo person={ person }/>\r\n        {/* <Spinner /> */}\r\n      </div>\r\n    );\r\n  };\r\n};\r\n","import App from './app.js';\r\nexport default App;","import React from 'react';\r\n\r\nimport './app.css';\r\n\r\nimport Header from '../header';\r\nimport RandomPlanet from '../random-planet';\r\nimport ItemList from '../item-list';\r\nimport PersonDetails from '../person-details';\r\n\r\nclass App extends React.Component {\r\n    \r\n    state = {\r\n        selectedPerson: 5,\r\n\r\n    }\r\n    \r\n    onPersonSelected = (id) => {\r\n        this.setState({\r\n            selectedPerson: id,\r\n        });\r\n    };\r\n    \r\n    render() {\r\n        \r\n\r\n        return(\r\n            <div className=\"app container\">\r\n                <Header />\r\n                <RandomPlanet />\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <ItemList OnItemSelected={this.onPersonSelected}/>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <PersonDetails personId={this.state.selectedPerson}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }  \r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n\n\n\n\n\n"],"sourceRoot":""}